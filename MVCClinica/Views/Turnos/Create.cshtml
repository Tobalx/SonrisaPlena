@model ClinicaSonrrisaPlena.Models.Entities.Turno

@{
    ViewData["Title"] = "Crear Turno";
}

<h1>Crear Turno</h1>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" method="post">
            <input type="hidden" asp-for="IdTurno" />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="FechaHora" class="control-label"></label>
                <input asp-for="FechaHora" class="form-control" type="datetime-local" />
                <span asp-validation-for="FechaHora" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Duracion" class="control-label"></label>
                <input asp-for="Duracion" class="form-control" />
                <span asp-validation-for="Duracion" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Estado" class="control-label"></label>
                <input asp-for="Estado" class="form-control" />
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="PacienteRut" class="control-label">RUT Paciente</label>
                <input list="RutPacientes" id="PacienteRut" name="PacienteRut" class="form-control" autocomplete="off" />
                <datalist id="RutPacientes" style="max-height: 100px; overflow-y: auto;">
                    @foreach (var paciente in (IEnumerable<ClinicaSonrrisaPlena.Models.Entities.Paciente>)ViewData["Pacientes"])
                    {
                        <option value="@paciente.RUT">@paciente.Nombre</option>
                    }
                </datalist>
            </div>

            <div class="form-group">
                <label asp-for="IdOdontologo" class="control-label"></label>
                <select asp-for="IdOdontologo" class="form-control" asp-items="@(ViewData["IdOdontologo"] as SelectList)"></select>
                <span asp-validation-for="IdOdontologo" class="text-danger"></span>
            </div>
            @*
                verificar esto que es   ver el boton de  guardar que cambie  de  rol  cuando sea paciente vaya a  home y cuando sea  odontologo
                sea  a lista que ya  tiene que ver sus turnos 
            *@
            @{
                var rol = User.IsInRole("Paciente") ? "Paciente" : (User.IsInRole("Odontologo") ? "Odontologo" : "Otro");
            }
            <script>
                function redirigirSegunRol() {
                    var rol = '@rol';

                    if (rol == 'Paciente') {
                        window.location.href = '/Home/Index';
                    } else if (rol == 'Odontologo') {
                        window.location.href = '/Turno/ListaTurnos';
                    } else {
                        window.location.href = '/Home/Index';
                    }
                }
            </script>

            <div class="form-group mt-3">
                <input type="submit" value="Guardar Turno" class="btn btn-primary" onclick="redirigirSegunRol()" />
            </div>
        </form>
    </div>
</div>

<div class="mt-3">
    @if (User.IsInRole("Odontologo"))
    {
        <a asp-action="Index">Volver a la lista</a>
    }
    else if (User.IsInRole("Paciente"))
    {
        <!-- Enlace para pacientes que redirige a Home/Index -->
        <a asp-controller="Home" asp-action="Index">Volver al Inicio</a>
    }
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}